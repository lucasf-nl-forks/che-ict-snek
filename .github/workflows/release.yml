name: Release Go Application

on:
  push:
  release:
    types: [created]

jobs:
  build-and-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
      # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
            
    steps:
      - uses: actions/checkout@v4
          
      - name: Build and Create Release
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{matrix.goos}}
          goarch: ${{matrix.goarch}}
          ldflags: "-X 'snek/cmd.Version=${{github.ref_name}}'"
          goversion: "1.24"
          project_path: "."
          binary_name: "snek"
          extra_files: "README.md LICENSE"
          compress_assets: true

  build-and-release-macos:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v6
        with:
          go-version: '1.25.x'
          check-latest: true

      - run: |
          echo "$MACOS_P12" | base64 --decode > $RUNNER_TEMP/cert.p12
        env:
          MACOS_P12: ${{ secrets.MACOS_P12 }}

      - run: chmod +x build_macos.sh && ./build_macos.sh
        env:
          MACOS_P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          MACOS_P12_NAME: ${{ secrets.MACOS_P12_NAME }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_TEAM_ID: ${{ secrets.MACOS_TEAM_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
